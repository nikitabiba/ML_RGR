import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import pickle
import tensorflow as tf
from sklearn.preprocessing import StandardScaler


with open('./models/gnb.pkl', 'rb') as f:
    gnb = pickle.load(f)
with open('./models/cbc.pkl', 'rb') as f:
    cbc = pickle.load(f)
with open('./models/bc.pkl', 'rb') as f:
    bc = pickle.load(f)
with open('./models/sc.pkl', 'rb') as f:
    sc = pickle.load(f)
with open('./models/xgbc.pkl', 'rb') as f:
    xgbc = pickle.load(f)
with open("./models/scaler.pkl", "rb") as f:
    scaler = pickle.load(f)
nn = tf.keras.models.load_model('./models/nn_model.h5')

models = {
    "–ù–∞–∏–≤–Ω—ã–π –ë–∞–π–µ—Å": gnb,
    "CatBoost": cbc,
    "–ë—ç–≥–≥–∏–Ω–≥": bc,
    "–°—Ç—ç–∫–∏–Ω–≥": sc,
    "XGBoost": xgbc,
    "–ù–µ–π—Ä–æ–Ω–Ω–∞—è —Å–µ—Ç—å": nn
}

def preprocess(df):
    X = df.values
    return scaler.transform(X)


st.set_page_config(page_title="–†–ì–†", layout="wide")

page = st.sidebar.radio("–ù–∞–≤–∏–≥–∞—Ü–∏—è", ["–û —Ä–∞–±–æ—Ç–µ", "–û –¥–∞—Ç–∞—Å–µ—Ç–µ", "–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏", "–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ"])

if page == "–û —Ä–∞–±–æ—Ç–µ":
    st.markdown("<h1 style='text-align: center; font-size: 64px;'>–†–ì–†</h1>", unsafe_allow_html=True)

    col1, col2 = st.columns([1, 2])

    with col1:
        st.image("./images/image.png", width=400)

    with col2:
        st.markdown("""
            <div style='padding-left: 0px; font-size: 32px;'>
                <p style='margin: 0;'><strong>–í—ã–ø–æ–ª–Ω–∏–ª:</strong> –ë–∏–±–∞ –ù–∏–∫–∏—Ç–∞ –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á</p>
                <p style='margin: 0;'><strong>–ì—Ä—É–ø–ø–∞:</strong> –§–ò–¢-231</p>
                <p style='margin-top: 16px;'><strong>–¢–µ–º–∞:</strong> –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ web-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –º–æ–¥–µ–ª–µ–π –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Streamlit.</p>
            </div>
        """, unsafe_allow_html=True)

elif page == "–û –¥–∞—Ç–∞—Å–µ—Ç–µ":
    st.title("–û–ø–∏—Å–∞–Ω–∏–µ –¥–∞—Ç–∞—Å–µ—Ç–∞")
    st.write("–ù–∞–∑–≤–∞–Ω–∏–µ: CSGO Dataset")
    st.write("""
        –ü—Ä–µ–¥–º–µ–Ω—Ç–Ω–∞—è –æ–±–ª–∞—Å—Ç—å:\n
        –ü—Ä–µ–¥–º–µ—Ç–Ω–æ–π –æ–±–ª–∞—Å—Ç—å –¥–∞—Ç–∞—Å–µ—Ç–∞ —è–≤–ª—è–µ—Ç—Å—è –∏–≥—Ä–∞ –≤ –∂–∞–Ω—Ä–µ "—à—É—Ç–µ—Ä" - CSGO. –ó–∞–ø–∏—Å–∏ –≤ –¥–∞—Ç–∞—Å–µ—Ç–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç –∏–∑ —Å–µ–±—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã –≤ —Å–ª—É—á–∞–π–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –≤—Ä–µ–º–µ–Ω–∏. –°–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–ª–∏—Å—å –≤ —Å—Ä–µ–¥–Ω–µ–º —Ä–∞–∑ –≤ 30 —Å–µ–∫—É–Ω–¥. –¶–µ–ª–µ–≤—ã–º –ø—Ä–∏–∑–Ω–∞–∫–æ–º –¥–∞—Ç–∞—Å–µ—Ç–∞ —è–≤–ª—è–µ—Ç—Å—è —Ñ–∞–∫—Ç –∑–∞–ª–æ–∂–µ–Ω–Ω–æ–π –±–æ–º–±—ã, —Ç–æ –µ—Å—Ç—å –∑–∞–ª–æ–∂–µ–Ω–∞ –æ–Ω–∞(–∫–ª–∞—Å—Å 1) –∏–ª–∏ –Ω–µ—Ç(–∫–ª–∞—Å—Å 0).\n
        –ü—Ä–∏–∑–Ω–∞–∫–∏ –¥–∞—Ç–∞—Å–µ—Ç–∞:\n
        time_left - –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –¥–æ –∫–æ–Ω—Ü–∞ —Ä–∞—É–Ω–¥–∞ –≤—Ä–µ–º—è;\n
        ct_score - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–∏–≥—Ä–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Ç—Ä-—Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç–∞–º–∏ —Ä–∞—É–Ω–¥–æ–≤;\n 
        t_score - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–∏–≥—Ä–∞–Ω–Ω—ã—Ö —Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç–∞–º–∏ —Ä–∞—É–Ω–¥–æ–≤;\n
        map - –∏–≥—Ä–æ–≤–∞—è –∫–∞—Ä—Ç–∞;\n
        bomb_planted - –∑–∞–ª–æ–∂–µ–Ω–∞ –ª–∏;\n
        ct_health - —Å—É–º–º–∞—Ä–Ω—ã–µ –æ—á–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è –∫–æ–Ω—Ç—Ä-—Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç–æ–≤;\n
        t_health - —Å—É–º–º–∞—Ä–Ω—ã–µ –æ—á–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è —Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç–æ–≤;\n
        ct_armor - —Å—É–º–º–∞—Ä–Ω—ã–µ –æ—á–∫–∏ –±—Ä–æ–Ω–∏ –∫–æ–Ω—Ç—Ä-—Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç–æ–≤;\n
        t_armor - —Å—É–º–º–∞—Ä–Ω—ã–µ –æ—á–∫–∏ –±—Ä–æ–Ω–∏ —Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç–æ–≤;\n
        ct_money - —Å—É–º–º–∞—Ä–Ω—ã–µ –¥–µ–Ω—å–≥–∏ –∫–æ–Ω—Ç—Ä-—Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç–æ–≤;\n
        t_money - —Å—É–º–º–∞—Ä–Ω—ã–µ –¥–µ–Ω—å–≥–∏ —Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç–æ–≤;\n
        ct_helmets - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–ª–µ–º–æ–≤ –∫–æ–Ω—Ç—Ä-—Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç–æ–≤;\n
        t_helmets - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–ª–µ–º–æ–≤ —Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç–æ–≤;\n
        ct_defuse_kits - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–±–æ—Ä–æ–≤ –¥–ª—è –æ–±–µ–∑–≤—Ä–µ–∂–∏–≤–∞–Ω–∏—è –±–æ–º–±—ã –∫–æ–Ω—Ç—Ä-—Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç–æ–≤;\n
        ct_players_alive - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∏–≤—ã—Ö –∫–æ–Ω—Ç—Ä-—Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç–æ–≤;\n
        t_players_alive - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∏–≤—ã—Ö —Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç–æ–≤;\n
        –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞—Ç–∞—Å–µ—Ç–∞:\n
        –í –ø—Ä–æ—Ü–µ—Å—Å–µ –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞—Ç–∞—Å–µ—Ç–∞ –±—ã–ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è. –û–Ω–∏ –∑–∞–ø–æ–ª–Ω—è–ª–∏—Å—å –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é –ø—Ä–µ–¥—ã–¥—É—â–µ–π –∑–∞–ø–∏—Å–∏, –ø–æ—Å–∫–æ–ª—å–∫—É –∑–∞–ø–∏—Å–∏ –≤ –¥–∞—Ç–∞—Å–µ—Ç–µ –∏–¥—É—Ç –≤ –ø–æ—Ä—è–¥–∫–µ —Ö–æ–¥–∞ –≤—Ä–µ–º–µ–Ω–∏. –î–∞–ª–µ–µ, –∫–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –±—ã–ª–∏ –∑–∞–º–µ–Ω–µ–Ω—ã –Ω–∞ —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–µ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞. –¢–∞–∫–∂–µ, –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã –¥—É–±–ª–∏–∫–∞—Ç—ã. –í—ã–±—Ä–æ—Å–æ–≤ –≤ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–≤–∞–Ω—Ç–∏–ª—è–º –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –Ω–µ –±—ã–ª–æ. –ë—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –ø—Ä–∏–∑–Ω–∞–∫ t_healt>ct_health, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç—Ä–∞–∂–∞–µ—Ç —Ñ–∞–∫—Ç —Ç–æ–≥–æ, –±–æ–ª—å—à–µ –ª–∏ –æ—á–∫–æ–≤ –∑–¥–æ—Ä–æ–≤—å—è —É –∫–æ–º–∞–Ω–¥—ã —Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç–æ–≤, —á–µ–º —É –∫–æ–º–∞–Ω–¥—ã –∫–æ–Ω—Ç—Ä-—Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç–æ–≤. –¢–∞–∫–∂–µ, –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏. –ù–∞–ø—Ä–∏–º–µ—Ä, –≤ –∏–≥—Ä–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –∂–∏–≤—ã—Ö –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ 6 –∏–≥—Ä–æ–∫–æ–≤ –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã. –ò–ª–∏, —Å—É–º–º–∞ –æ—á–∫–æ–≤ –∑–¥–æ—Ä–æ–≤—å—è —É –∫–æ–º–∞–Ω–¥—ã –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∏–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤, —É–º–Ω–æ–∂–µ–Ω–Ω–æ–µ –Ω–∞ 100, –ø–æ—Å–∫–æ–ª—å–∫—É —É –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –º–∞–∫—Å–∏–º—É–º 100 –æ—á–∫–æ–≤ –∑–¥–æ—Ä–æ–≤—å—è. –ü–æ—Å–ª–µ –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª —Ñ–æ—Ä–º–∞—Ç–∞ CSV. –ü—Ä–∏ –æ–±—É—á–µ–Ω–∏–∏ –º–æ–¥–µ–ª–µ–π –¥–∞–Ω–Ω—ã–µ —Ç–∞–∫–∂–µ –±—ã–ª–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, –∞ —Ç–∞–∫–∂–µ –±—ã–ª–∞ —Ä–µ—à–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ –¥–∏—Å–±–∞–ª–∞–Ω—Å–∞ –∫–ª–∞—Å—Å–æ–≤.
    """)
    df = pd.read_csv('./datasets/csgo_processed.csv', sep=';')
    st.subheader("–ü–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫ –¥–∞—Ç–∞—Å–µ—Ç–∞:")
    st.dataframe(df.head())

elif page == "–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏":
    st.title("–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")

    df = pd.read_csv('./datasets/csgo_processed.csv', sep=';')
    
    fig1, ax1 = plt.subplots(figsize=(9, 9))
    sns.heatmap(df.corr(), annot=True, cmap="coolwarm", linewidths=0.5, annot_kws={"size": 6}, ax=ax1)
    ax1.set_title("–ö–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞", fontsize=14)

    fig2, ax2 = plt.subplots(figsize=(9, 9))
    sns.scatterplot(data=df, x='ct_score', y='t_score', ax=ax2)
    ax2.set_title("ct_score vs t_score", fontsize=14)

    fig3, ax3 = plt.subplots(figsize=(9, 9))
    sns.histplot(df['t_money'], kde=True, ax=ax3)
    ax3.set_title("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ t_money", fontsize=14)

    fig4, ax4 = plt.subplots(figsize=(9, 9))
    sns.histplot(df['ct_score'], kde=True, ax=ax4)
    ax4.set_title("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ ct_score", fontsize=14)

    col1, col2 = st.columns(2)
    with col1:
        st.subheader("1. Heatmap")
        st.pyplot(fig1, use_container_width=False)

    with col2:
        st.subheader("2. ct_score vs t_score")
        st.pyplot(fig2, use_container_width=False)

    col3, col4 = st.columns(2)
    with col3:
        st.subheader("3. –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ t_money")
        st.pyplot(fig3, use_container_width=False)

    with col4:
        st.subheader("4. –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ ct_score")
        st.pyplot(fig4, use_container_width=False)

elif page == "–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ":
    st.title("üîç –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏")

    model_name = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å:", list(models.keys()))
    uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ CSV —Ñ–∞–π–ª", type="csv")

    if uploaded_file is not None:
        input_df = pd.read_csv(uploaded_file, sep=";")
        st.write("–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
        st.dataframe(input_df)

    else:
        st.info("–ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤—Ä—É—á–Ω—É—é –Ω–∏–∂–µ:")

        time_left = st.number_input("–í—Ä–µ–º—è –¥–æ –∫–æ–Ω—Ü–∞ —Ä–∞—É–Ω–¥–∞", min_value=0.0, max_value=175.0, value=100.0, step=0.01, format="%.2f")
        ct_score = st.number_input("–°—á—ë—Ç —Å–ø–µ—Ü–Ω–∞–∑–∞ –ø–æ —Ä–∞—É–Ω–¥–∞–º", min_value=0, max_value=32, value=0)
        t_score = st.number_input("–°—á—ë—Ç —Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç–æ–≤ –ø–æ —Ä–∞—É–Ω–¥–∞–º", min_value=0, max_value=32, value=0)
        map_val = st.number_input("–ö–∞—Ä—Ç–∞", min_value=0, max_value=7, value=0)
        ct_health = st.number_input("–ó–¥–æ—Ä–æ–≤—å–µ —Å–ø–µ—Ü–Ω–∞–∑–∞", min_value=0, max_value=500, value=100)
        t_health = st.number_input("–ó–¥–æ—Ä–æ–≤—å–µ —Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç–æ–≤", min_value=0, max_value=500, value=100)
        ct_armor = st.number_input("–ë—Ä–æ–Ω—è —Å–ø–µ—Ü–Ω–∞–∑–∞", min_value=0, max_value=500, value=50)
        t_armor = st.number_input("–ë—Ä–æ–Ω—è —Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç–æ–≤", min_value=0, max_value=500, value=50)
        ct_money = st.number_input("–î–µ–Ω—å–≥–∏ —Å–ø–µ—Ü–Ω–∞–∑–∞", min_value=0, max_value=80000, value=1000)
        t_money = st.number_input("–î–µ–Ω—å–≥–∏ —Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç–æ–≤", min_value=0, max_value=80000, value=1000)
        ct_helmets = st.number_input("–®–ª–µ–º—ã —Å–ø–µ—Ü–Ω–∞–∑–∞", min_value=0, max_value=5, value=3)
        t_helmets = st.number_input("–®–ª–µ–º—ã —Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç–æ–≤", min_value=0, max_value=5, value=2)
        ct_defuse_kits = st.number_input("–î–µ—Ñ—É–∑–∞ —Å–ø–µ—Ü–Ω–∞–∑–∞", min_value=0, max_value=5, value=2)
        ct_players_alive = st.number_input("–ñ–∏–≤—ã–µ —Å–ø–µ—Ü–Ω–∞–∑–æ–≤—Ü—ã", min_value=0, max_value=5, value=3)
        t_players_alive = st.number_input("–ñ–∏–≤—ã–µ —Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç—ã", min_value=0, max_value=5, value=4)
        t_health_gt_ct = int(t_health > ct_health)

        manual_input = pd.DataFrame([{
            "time_left": time_left,
            "ct_score": ct_score,
            "t_score": t_score,
            "map": map_val,
            "ct_health": ct_health,
            "t_health": t_health,
            "ct_armor": ct_armor,
            "t_armor": t_armor,
            "ct_money": ct_money,
            "t_money": t_money,
            "ct_helmets": ct_helmets,
            "t_helmets": t_helmets,
            "ct_defuse_kits": ct_defuse_kits,
            "ct_players_alive": ct_players_alive,
            "t_players_alive": t_players_alive,
            "t_health > ct_health": t_health_gt_ct
        }])

        trigger_predict = st.button("–ó–∞–≥—Ä—É–∑–∏—Ç—å –∑–∞–ø–∏—Å—å")
        input_df = manual_input if trigger_predict else None

        if trigger_predict:
            st.subheader("–í–≤–µ–¥—ë–Ω–Ω–∞—è –∑–∞–ø–∏—Å—å:")
            st.dataframe(input_df)

    if input_df is not None:
        processed = preprocess(input_df)
        model = models[model_name]

        if model_name == "–ù–µ–π—Ä–æ–Ω–Ω–∞—è —Å–µ—Ç—å":
            preds = model.predict(processed)
            labels = preds.argmax(axis=1)
        else:
            labels = model.predict(processed)

        def interpret_label(label):
            return "–ë–æ–º–±–∞ –Ω–µ –∑–∞–ª–æ–∂–µ–Ω–∞" if label == 0 else "–ë–æ–º–±–∞ –∑–∞–ª–æ–∂–µ–Ω–∞"

        interpreted = [interpret_label(label) for label in labels]

        st.subheader("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è:")
        for i, (label, text) in enumerate(zip(labels, interpreted)):
            color = "red" if label == 0 else "green"
            st.markdown(
                f"<p style='color:{color}; font-size:18px;'>–ó–∞–ø–∏—Å—å {i}: {text}</p>",
                unsafe_allow_html=True
            )

